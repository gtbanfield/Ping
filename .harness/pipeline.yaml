pipeline:
  name: Ping
  identifier: Ping
  projectIdentifier: IDA
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github
        repoName: Ping
        build: <+input>
  stages:
    - stage:
        name: CI
        identifier: CI
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.k8s
              namespace: api
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: Run
                  name: FetchBinaries
                  identifier: Run_1
                  spec:
                    connectorRef: account.harnessImage
                    image: gtbanf1979/maven:v1
                    shell: Sh
                    command: |-
                      curl -K https://nexus:8443/repository/adhoc/PING/AM-7.5.1.zip -O
                      curl -k https://nexus:8443/repository/adhoc/PING/Amster-7.5.1.zip -O
                      curl -k https://nexus:8443/repository/adhoc/PING/DS-7.5.2.zip -O


                      #Unzip Ping Artifacts
                      unzip AM-7.5.1.zip
                      unzip Amster-7.5.1.zip
                      unzip DS-7.5.2.zip

                      #Copy Dockerfile

                      cp Ping/docker/7.5/DS-Empty/Dockerfile /harness/opendj/samples/docker/
                      cp Ping/docker/7.5/Amster-Base/Dockerfile /harness/amster/samples/docker/

                      cp Ping/docker/7.5/AM/AM-EMPTY/Dockerfile /harness/openam/samples/docker/images/am-empty/
                      cp Ping/docker/7.5/AM/AM-BASE/Dockerfile /harness/openam/samples/docker/images/am-base/
                      cp Ping/docker/7.5/AM/AM-CDK/Dockerfile /harness/openam/samples/docker/images/am-cdk/
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Nexus
                  identifier: BuildAndPushDockerRegistry_1
                  spec:
                    connectorRef: account.Nexus
                    repo: 192.168.1.83:5000/repository/ping
                    tags: <+input>
                    dockerfile: <+input>
                    context: <+input>
                    buildArgs:
                      APP_NAME: <+pipeline.name>
                    resources:
                      limits:
                        memory: 2Gi
                        cpu: 1
                    envVariables:
                      PLUGIN_SKIP_TLS_VERIFY: "true"

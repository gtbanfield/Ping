pipeline:
  name: Ping
  identifier: Ping
  projectIdentifier: IDA
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github
        repoName: Ping
        build: <+input>
  stages:
    - stage:
        name: CI
        identifier: CI
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.k8s
              namespace: api
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: Run
                  name: FetchBinaries
                  identifier: Run_1
                  spec:
                    connectorRef: account.harnessImage
                    image: gtbanf1979/maven:v1
                    shell: Sh
                    command: |-
                      curl -k https://192.168.1.83:8443/repository/adhoc/PING/AM-7.5.1.zip -O
                      curl -k https://192.168.1.83:8443/repository/adhoc/PING/Amster-7.5.1.zip -O
                      curl -k https://192.168.1.83:8443/repository/adhoc/PING/DS-7.5.2.zip -O

                      pwd
                      ls -la .

                      #Unzip Ping Artifacts
                      unzip -q AM-7.5.1.zip
                      unzip -q Amster-7.5.1.zip
                      unzip -q DS-7.5.2.zip

                      cd opendj
                      chmod -R 755 *
                      cd -
                      #Copy Dockerfile

                      #DS-Empty
                      #cp docker/7.5/DS-Empty/Dockerfile /harness/opendj/samples/docker/

                      #Amster-Base
                      #cp docker/7.5/Amster-Base/Dockerfile /harness/amster/samples/docker/

                      #AM
                      #cp docker/7.5/AM/AM-EMPTY/Dockerfile /harness/openam/samples/docker/images/am-empty/
                      #cp docker/7.5/AM/AM-BASE/Dockerfile /harness/openam/samples/docker/images/am-base/
                      #cp docker/7.5/AM/AM-CDK/Dockerfile /harness/openam/samples/docker/images/am-cdk/
                    resources:
                      limits:
                        memory: 4Gi
                        cpu: 2
              - step:
                  name: Nexus
                  identifier: Nexus
                  template:
                    templateRef: Nexus
                    versionLabel: v0.1.0
                    gitBranch: main
                    templateInputs:
                      type: BuildAndPushDockerRegistry
                      spec:
                        tags: <+input>
                        dockerfile: <+input>
                        context: <+input>
    - stage:
        name: Deploy
        identifier: Deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          environment:
            environmentRef: Prod
            deployToAll: false
            infrastructureDefinitions:
              - identifier: K8s
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
          services:
            values:
              - serviceRef: DSService
              - serviceRef: AMService
                gitBranch: main
              - serviceRef: AmsterService
            metadata:
              parallel: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
  delegateSelectors:
    - kubernetes-delegate-account
